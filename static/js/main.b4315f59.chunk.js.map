{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","Textform","useState","text","setText","style","color","heading","rows","value","onChange","console","log","event","target","backgroundColor","newtext","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","length","split","Alert","alert","msg","defaultProps","abouttext","App","setmode","setalert","showalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wLAAe,I,YCMA,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACN,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAEF,oBAAIF,UAAU,gBAKhB,sBAAKA,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACJ,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWC,GAAG,yBAAyBC,QAASP,EAAMQ,aAC/F,uBAAOP,UAAS,gDAAhB,kCCxBa,SAASQ,EAAST,GAC/B,MAAqBU,mBAAS,mBAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KA0BA,OACE,qCACA,sBAAKX,UAAU,iBAAiBY,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAA1E,UACM,6BAAKF,EAAMe,UACf,qBAAKd,UAAU,OAAOY,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAAhE,SACE,0BACED,UAAU,eACVK,GAAG,QACHU,KAAK,IAAIC,MAAON,EAChBO,SAnBa,WACnBC,QAAQC,IAAI,YAEZR,EAAQS,MAAMC,OAAOL,QAgBWJ,MAAO,CAACU,gBAA6B,SAAbvB,EAAME,KAAc,OAAO,QAAQY,MAAmB,SAAbd,EAAME,KAAc,QAAQ,aAE3H,wBAAQD,UAAU,kBAAkBM,QApCpB,WAClBY,QAAQC,IAAI,aACZ,IAAII,EAAQb,EAAKc,cACjBb,EAAQY,IAiCN,kCACA,wBAAQvB,UAAU,uBAAuBM,QAhCzB,WAClBY,QAAQC,IAAI,aACZ,IAAII,EAAQb,EAAKe,cACjBd,EAAQY,IA6BN,kCACA,wBAAQvB,UAAU,uBAAuBM,QA5BtB,WACrBY,QAAQC,IAAI,aAEZR,EADY,KA0BV,uBACA,wBAAQX,UAAU,uBAAuBM,QAnB5B,WACf,IAAII,EAAKgB,SAASC,eAAe,SACjCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKM,QAgBjC,qBAEA,sBAAKhB,UAAU,iBAAf,UACE,oBAAIY,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAA9C,+BACA,oBAAGW,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAA7C,UAAwDS,EAAKsB,OAAO,EAAEtB,EAAKuB,MAAM,KAAKD,OAAO,EAA7F,cAA2GtB,EAAKsB,OAAhH,iBACA,oBAAGpB,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAA7C,UAAwDS,EAAKsB,OAAO,EAAE,KAAMtB,EAAKuB,MAAM,KAAKD,OAAO,EAAnG,yBACA,oBAAIpB,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAA9C,qBACA,mBAAGW,MAAO,CAACC,MAAmB,SAAbd,EAAME,KAAc,QAAQ,SAA7C,SAAwDS,EAAKsB,OAAO,EAAEtB,EAAK,2BChDpE,SAASwB,EAAMnC,GAC1B,OACGA,EAAMoC,OAAQ,mCACV,sBAAKnC,UAAS,sBAAiBD,EAAMoC,MAAM/B,KAA7B,4CAAd,UACT,mCAASL,EAAMoC,MAAM/B,KAArB,SAAuCL,EAAMoC,MAAMC,SFiCrDtC,EAAOuC,aAAa,CAChBlC,MAAM,YACJmC,UAAU,SGiCDC,MAxDf,WACE,MAAwB9B,mBAAS,SAAjC,mBAAOR,EAAP,KAAauC,EAAb,KAkBA,EAA0B/B,mBAAS,MAAnC,mBAAO0B,EAAP,KAAcM,EAAd,KACMC,EAAU,SAACC,EAAQvC,GAEvBqC,EAAS,CACPL,IAAIO,EACJvC,KAAKA,IAEPwC,YAAW,WAETH,EAAS,QACR,OAEL,OACD,qCAED,cAAC3C,EAAD,CAAQK,MAAM,YAAYmC,UAAU,kBAAkBrC,KAAMA,EAAMM,WAhC/C,WACL,UAAPN,GAGDuC,EAAQ,QACRd,SAASmB,KAAKjC,MAAMU,gBAAgB,UACpCoB,EAAU,6BAA6B,aAMvCF,EAAQ,SACRd,SAASmB,KAAKjC,MAAMU,gBAAgB,QACpCoB,EAAU,8BAA8B,eAmB9C,sBAAK1C,UAAU,YAAf,UACE,cAACkC,EAAD,CAAOC,MAAOA,IAUN,cAAC3B,EAAD,CAAUM,QAAQ,4BAA4Bb,KAAMA,WCpD/C6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BmB,K","file":"static/js/main.b4315f59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link}  from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a> */}\r\n        </li>\r\n        \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n  <label className={`form-check-label\" for=\"flexSwitchCheckDefault`}>Dark Mode</label>\r\n</div>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n  \r\n</nav>\r\n    )\r\n}\r\nNavbar.propTypes={title: PropTypes.string,abouttext:PropTypes.string,}\r\nNavbar.defaultProps={\r\n    title:'textutils'\r\n    , abouttext:'about'\r\n}","import React,{useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [text,setText]=useState('Enter text here')\r\n  const handleupclick=()=>{\r\n    console.log('uppercase');\r\n    let newtext=text.toUpperCase()\r\n    setText(newtext)\r\n  }\r\n  const handleloclick=()=>{\r\n    console.log('uppercase');\r\n    let newtext=text.toLowerCase()\r\n    setText(newtext)\r\n  }\r\n  const handleclearclick=()=>{\r\n    console.log('uppercase');\r\n    let newtext=''\r\n    setText(newtext)\r\n  }\r\n  const handleOnchange=()=>{\r\n    console.log('onchange');\r\n    // eslint-disable-next-line no-restricted-globals\r\n    setText(event.target.value)\r\n  }\r\n  const handlecopy=()=>{\r\n    let text=document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?\"white\":\"black\"}}>\r\n          <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\" style={{color:props.mode==='dark'?\"white\":\"black\"}}>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"mybox\"\r\n          rows=\"8\" value={text}\r\n          onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?\"gray\":\"white\",color:props.mode==='dark'?\"white\":\"black\"}}></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleupclick}>Convert to Uppercase</button >\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleloclick}>Convert to Lowercase</button >\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleclearclick}>Clear All</button >\r\n      <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>Copy</button >\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1 style={{color:props.mode==='dark'?\"white\":\"black\"}}>Your text summary</h1>\r\n        <p style={{color:props.mode==='dark'?\"white\":\"black\"}}>{text.length>0?text.split(\" \").length:0} words and {text.length} characters</p>\r\n        <p style={{color:props.mode==='dark'?\"white\":\"black\"}}>{text.length>0?0.008*text.split(\" \").length:0} Minutes of Reading</p>\r\n        <h2 style={{color:props.mode==='dark'?\"white\":\"black\"}}>Preview</h2>\r\n        <p style={{color:props.mode==='dark'?\"white\":\"black\"}}>{text.length>0?text:'Start Typing....'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert&& <>\r\n           <div className={`alert alert-${props.alert.type} alert-dismissible fade show role=\"alert`}>\r\n  <strong>{props.alert.type}:  </strong>{props.alert.msg}\r\n  \r\n</div>  \r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\n// import About from './components/About';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light') \n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      \n      setmode('dark')\n      document.body.style.backgroundColor='#343a40'\n      showalert('Dark Mode has been enabled','success')\n      \n    }\n    else\n    {\n      \n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showalert('Light Mode has been enabled','success')\n    }\n  }\n  const [alert, setalert] = useState(null)\n  const showalert=(message,type)=>{\n\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n        \n      setalert(null)\n    }, 2500);\n  }\n  return (\n <>\n {/* <Router> */}\n<Navbar title='TextUtils' abouttext='About TextUtils' mode={mode} toggleMode={toggleMode} />\n<div className=\"container\">\n  <Alert alert={alert} />\n  {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route path=\"/\">\n\n          </Route>\n        </Switch> */}\n          <Textform heading=\"Enter the text to Analyze\" mode={mode} />\n  \n\n</div>\n{/* </Router> */}\n\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}